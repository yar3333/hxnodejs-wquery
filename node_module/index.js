// Generated by Haxe 4.3.3
(function ($hx_exports, $global) { "use strict";
$hx_exports["_AttachMode"] = $hx_exports["_AttachMode"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		do {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
		} while(this.r.global);
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
Math.__name__ = "Math";
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var wquery_Application = $hx_exports["Application"] = function() { };
wquery_Application.__name__ = "wquery.Application";
wquery_Application.getTemplate = function(klass) {
	if(!wquery_Application.templates.has(klass)) {
		wquery_Application.templates.set(klass,new wquery_Template(klass));
	}
	return wquery_Application.templates.get(klass);
};
wquery_Application.run = function(selector,componentClass,params) {
	return wquery_Component.create(componentClass,null,js.JQuery(selector),params,"replace");
};
var wquery_Component = $hx_exports["Component"] = function(parent,parentNode,params,attachMode) {
	this.nextAnonimID = 0;
	this.children = { };
	this.id = "";
	wquery_ComponentTools.loadFieldValues(this,params);
	if(this.id == null || this.id == "") {
		this.id = parent != null ? "wqc_" + ++parent.nextAnonimID : "";
	} else {
		var n = this.id.lastIndexOf("-");
		this.id = this.id.substring(n + 1);
	}
	this.page = parent != null ? parent.page : this;
	this.parent = parent;
	this.fullID = (parent != null ? parent.prefixID : "") + this.id;
	this.prefixID = this.fullID != "" ? this.fullID + "-" : "";
	if(parent != null) {
		if(Object.prototype.hasOwnProperty.call(parent.children,this.id)) {
			throw new Error("Component '" + wquery_ComponentTools.getClassName(js_Boot.getClass(parent)) + "#" + parent.id + "': child component with id = '" + this.id + "' already exist.");
		}
		parent.children[this.id] = this;
	}
	var template = wquery_Application.getTemplate(js_Boot.getClass(this));
	wquery_ComponentTools.ensureStylesActive(wquery_ComponentTools.getClassName(js_Boot.getClass(this)),template.css);
	var node = template.newDoc();
	try {
		node = wquery_ComponentTools.processSubstitutions(node,this);
	} catch( _g ) {
		var _g1 = haxe_Exception.caught(_g).unwrap();
		if(((_g1) instanceof wquery_ComponentInitializationException)) {
			var e = _g1;
			throw new Error(e.message + " in component '" + wquery_ComponentTools.getClassName(js_Boot.getClass(this)) + "'.");
		} else {
			throw _g;
		}
	}
	wquery_ComponentTools.expandDocElemIDs(this.prefixID,node);
	wquery_EventTools.attachComponentEventHandlers(this);
	this.nodes = js.JQuery(node.childNodes);
	wquery_EventTools.attachHtmlEventHandlers(this,node,Reflect.fields(template.imports));
	wquery_ComponentTools.createChildren(this,node,template.imports);
	this.attachNode(node,js.JQuery(parentNode),attachMode != null ? attachMode : "append");
};
wquery_Component.__name__ = "wquery.Component";
wquery_Component.create = function(klass,parent,parentNode,params,attachMode) {
	var r = Type.createInstance(klass,[parent,parentNode,params,attachMode]);
	wquery_ComponentTools.callMethodFromParentToChildren(r,"preInit");
	wquery_ComponentTools.callMethodFromChildrenToParent(r,"init");
	return r;
};
wquery_Component.prototype = {
	template: function() {
		return null;
	}
	,remove: function() {
		if(this.parent != null && this.parent.children != null) {
			var _g = 0;
			var _g1 = Reflect.fields(this.parent.children);
			while(_g < _g1.length) {
				var key = _g1[_g];
				++_g;
				if(Reflect.field(this.parent.children,key) == this) {
					Reflect.deleteField(this.parent.children,key);
				}
			}
		}
	}
	,q: function(arg,context) {
		var c = js_Boot.getClass(this);
		var cssGlobalizer = new wquery_CssGlobalizer(c.__name__);
		if(arg != null && arg != "" && typeof(arg) == "string") {
			arg = cssGlobalizer.selector(StringTools.replace(arg,"#","#" + this.prefixID));
		}
		return cssGlobalizer.fixJq(context == null ? js.JQuery(arg,this.nodes).add(arg) : js.JQuery(arg,context));
	}
	,attachNode: function(node,parentNode,attachMode) {
		switch(attachMode) {
		case "append":
			parentNode[0].append(node);
			break;
		case "content":
			parentNode[0].innerHTML = "";
			parentNode[0].append(node);
			break;
		case "prepend":
			parentNode[0].prepend(node);
			break;
		case "replace":
			parentNode[0].replaceWith(node);
			break;
		default:
			throw new Error("Unknow attachMode: " + attachMode + ".");
		}
	}
	,__class__: wquery_Component
};
var wquery_ComponentInitializationException = $hx_exports["ComponentInitializationException"] = function(message) {
	this.message = message;
};
wquery_ComponentInitializationException.__name__ = "wquery.ComponentInitializationException";
wquery_ComponentInitializationException.prototype = {
	__class__: wquery_ComponentInitializationException
};
var wquery_ComponentList = $hx_exports["ComponentList"] = function(type,parentComponent,parentNode,paramsList) {
	this.length = 0;
	this.components = [];
	this.type = type;
	this.parentComponent = parentComponent;
	this.parentNode = parentNode;
	this.emptyContent = parentNode.html();
	if(paramsList != null) {
		var _g = 0;
		while(_g < paramsList.length) {
			var params = paramsList[_g];
			++_g;
			this.create(params);
		}
	}
};
wquery_ComponentList.__name__ = "wquery.ComponentList";
wquery_ComponentList.prototype = {
	create: function(params,append) {
		if(append == null) {
			append = true;
		}
		var r = wquery_Component.create(this.type,this.parentComponent,this.parentNode,params,append ? "append" : "prepend");
		this.components.push(r);
		this.length++;
		return r;
	}
	,remove: function(item) {
		var n = this.components.indexOf(item);
		if(n < 0) {
			return false;
		}
		this.components[n].remove();
		this.components.splice(n,1);
		this.length--;
		return true;
	}
	,clear: function() {
		if(this.components.length == 0) {
			return;
		}
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.remove();
		}
		this.components.splice(0,this.components.length);
		this.parentNode.html(this.emptyContent);
		this.length = 0;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this.components);
	}
	,getByIndex: function(n) {
		return this.components[n];
	}
	,__class__: wquery_ComponentList
};
var wquery_ComponentTools = $hx_exports["ComponentTools"] = function() { };
wquery_ComponentTools.__name__ = "wquery.ComponentTools";
wquery_ComponentTools.processSubstitutions = function(doc,object) {
	var oldHtml = wquery_ComponentTools.documentFragmentToHtmlStringTo(doc);
	var newHtml = wquery_ComponentTools.processSubstitution(oldHtml,object);
	if(newHtml == oldHtml) {
		return doc;
	} else {
		return wquery_ComponentTools.htmlStringToDocumentFragment(newHtml);
	}
};
wquery_ComponentTools.processSubstitution = function(s,object) {
	return new EReg("\\{([_a-zA-Z][_a-zA-Z0-9]*)\\}","g").map(s,function(re) {
		var name = re.matched(1);
		if(!Object.prototype.hasOwnProperty.call(object,name)) {
			throw haxe_Exception.thrown(new wquery_ComponentInitializationException("Don't found field for substitution '" + name + "'"));
		}
		return Std.string(Reflect.field(object,name));
	});
};
wquery_ComponentTools.expandDocElemIDs = function(prefixID,baseNode) {
	var _g = 0;
	var _g1 = baseNode.children;
	while(_g < _g1.length) {
		var node = _g1[_g];
		++_g;
		var nodeID = node.getAttribute("id");
		if(nodeID != null && nodeID != "" && nodeID.indexOf(":") == -1) {
			node.setAttribute("id",prefixID + nodeID);
		}
		if(node.tagName == "LABEL") {
			var nodeFor = node.getAttribute("for");
			if(nodeFor != null && nodeFor != "") {
				node.setAttribute("for",prefixID + nodeFor);
			}
		}
		wquery_ComponentTools.expandDocElemIDs(prefixID,node);
	}
};
wquery_ComponentTools.htmlStringToDocumentFragment = function(html) {
	return window.document.createRange().createContextualFragment(html);
};
wquery_ComponentTools.documentFragmentToHtmlStringTo = function(doc) {
	return new XMLSerializer().serializeToString(doc);
};
wquery_ComponentTools.createChildren = function(parent,node,imports) {
	var r = [];
	if(imports != null) {
		var tags = Reflect.fields(imports);
		if(tags.length > 0) {
			var nodes = node.querySelectorAll(tags.join(","));
			var _g = 0;
			while(_g < nodes.length) {
				var nodeToReplace = nodes[_g];
				++_g;
				var klass = Reflect.field(imports,nodeToReplace.nodeName.toLowerCase());
				if(!js_Boot.__instanceof(klass,Class) && !Reflect.isFunction(klass)) {
					throw new Error("Expected reference to component class in `" + wquery_ComponentTools.getClassName(js_Boot.getClass(parent)) + ".imports." + nodeToReplace.nodeName.toLowerCase() + "`.");
				}
				r.push(Type.createInstance(klass,[parent,nodeToReplace,wquery_ComponentTools.getElementAttributesAsObject(nodeToReplace),"replace"]));
			}
		}
	}
	return r;
};
wquery_ComponentTools.loadFieldValues = function(component,params) {
	if(params == null) {
		return;
	}
	var lcComponentFields = new Map();
	var _g = 0;
	var _g1 = Reflect.fields(component);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		lcComponentFields.set(field.toLowerCase(),field);
	}
	var _g = 0;
	var _g1 = Reflect.fields(params);
	while(_g < _g1.length) {
		var originalCaseField = _g1[_g];
		++_g;
		var value = Reflect.field(params,originalCaseField);
		var field = lcComponentFields.has(originalCaseField.toLowerCase()) ? lcComponentFields.get(originalCaseField.toLowerCase()) : originalCaseField;
		var setterName = lcComponentFields.has("set_" + field) ? lcComponentFields.get("set_" + field) : "set_" + field;
		var getterName = lcComponentFields.has("get_" + field) ? lcComponentFields.get("get_" + field) : "get_" + field;
		if(Reflect.isFunction(Reflect.field(component,setterName))) {
			if(!Reflect.isFunction(Reflect.field(component,getterName))) {
				throw new Error("Load values: getter for '" + field + "' must be defined in class '" + wquery_ComponentTools.getClassName(js_Boot.getClass(component)) + "'.");
			}
			Reflect.field(component,setterName).apply(component,[wquery_ComponentTools.convertValueType(value,Reflect.field(component,getterName).apply(component,[]))]);
		} else if(Object.prototype.hasOwnProperty.call(component,field)) {
			component[field] = wquery_ComponentTools.convertValueType(value,Reflect.field(component,field));
		} else if(value != null) {
			console.warn(new Error("Class '" + wquery_ComponentTools.getClassName(js_Boot.getClass(component)) + "' does not have field '" + originalCaseField + "' to load value from params."));
		}
	}
};
wquery_ComponentTools.convertValueType = function(rawValue,typedValue) {
	var v;
	switch(Type.typeof(typedValue)._hx_index) {
	case 1:
		v = typeof(rawValue) == "number" && ((rawValue | 0) === rawValue) ? rawValue : Std.parseInt(rawValue);
		break;
	case 2:
		v = typeof(rawValue) == "number" ? rawValue : parseFloat(rawValue);
		break;
	case 3:
		v = rawValue == true || rawValue == "true";
		break;
	default:
		v = rawValue;
	}
	return v;
};
wquery_ComponentTools.getElementAttributesAsObject = function(element) {
	var r = { };
	var i = 0;
	while(i < element.attributes.length) {
		r[element.attributes[i].name] = element.attributes[i].value;
		++i;
	}
	return r;
};
wquery_ComponentTools.callMethodIfExists = function(obj,methodName,args) {
	var f = Reflect.field(obj,methodName);
	if(Reflect.isFunction(f)) {
		f.apply(obj,args);
	}
};
wquery_ComponentTools.ensureStylesActive = function(klassName,css) {
	css = StringTools.trim(css);
	if(css == "") {
		return;
	}
	var styleBlockID = "wqs_" + StringTools.replace(klassName,".","_");
	if(window.document.getElementById(styleBlockID) != null) {
		return;
	}
	var root = window.document.head || window.document.getElementsByTagName("head")[0] || window.document.body || window.document;
	root.appendChild(wquery_ComponentTools.createStyleElement(styleBlockID,css));
};
wquery_ComponentTools.createStyleElement = function(styleBlockID,css) {
	var style = window.document.createElement("style");
	if(styleBlockID != null) {
		style.id = styleBlockID;
	}
	style.type = "text/css";
	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		style.appendChild(window.document.createTextNode(css));
	}
	return style;
};
wquery_ComponentTools.getClassName = function(klass) {
	var r = klass.__name__;
	if(r != null) {
		return r;
	}
	r = wquery_ComponentTools.classNames.h[klass.__id__];
	if(r != null) {
		return r;
	}
	r = "wqclass_" + wquery_ComponentTools.classNameCounter;
	wquery_ComponentTools.classNameCounter++;
	wquery_ComponentTools.classNames.set(klass,r);
	return r;
};
wquery_ComponentTools.callMethodFromParentToChildren = function(parent,methodName) {
	wquery_ComponentTools.callMethodIfExists(parent,methodName);
	var _g = 0;
	var _g1 = Reflect.fields(parent.children);
	while(_g < _g1.length) {
		var childID = _g1[_g];
		++_g;
		var child = Reflect.field(parent.children,childID);
		wquery_ComponentTools.callMethodFromParentToChildren(child,methodName);
	}
};
wquery_ComponentTools.callMethodFromChildrenToParent = function(parent,methodName) {
	var _g = 0;
	var _g1 = Reflect.fields(parent.children);
	while(_g < _g1.length) {
		var childID = _g1[_g];
		++_g;
		var child = Reflect.field(parent.children,childID);
		wquery_ComponentTools.callMethodFromChildrenToParent(child,methodName);
	}
	wquery_ComponentTools.callMethodIfExists(parent,methodName);
};
var wquery_CssGlobalizer = $hx_exports["CssGlobalizer"] = function(klassName) {
	klassName = klassName.substring(0,klassName.lastIndexOf("."));
	this.prefix = StringTools.replace(klassName.toLowerCase(),".","_") + "-";
};
wquery_CssGlobalizer.__name__ = "wquery.CssGlobalizer";
wquery_CssGlobalizer.prototype = {
	className: function(name) {
		var reClassName_r = new RegExp("[~]|\\bL-","g".split("u").join(""));
		if(typeof(name) != "string") {
			return name;
		}
		return name.replace(reClassName_r,this.prefix);
	}
	,selector: function(selector) {
		var reSelector_r = new RegExp("[.][~]|[.]L-","g".split("u").join(""));
		if(typeof(selector) != "string") {
			return selector;
		}
		return selector.replace(reSelector_r,"." + this.prefix);
	}
	,styles: function(text) {
		var re = new EReg("(?:[/][*](?:.|[\r\n])*?[*][/])|(?:[{](?:.|[\r\n])*?[}])|([^{]+)|(?:[{])","");
		var r = "";
		while(re.match(text)) {
			if(re.matched(1) != null) {
				r += this.selector(re.matched(0));
			} else {
				r += re.matched(0);
			}
			text = re.matchedRight();
		}
		return r;
	}
	,doc: function(baseNode) {
		var _g = 0;
		var _g1 = baseNode.children;
		while(_g < _g1.length) {
			var node = _g1[_g];
			++_g;
			if(node.hasAttribute("class")) {
				node.setAttribute("class",this.className(node.getAttribute("class")));
			}
			if(node.hasAttribute("cssClass")) {
				node.setAttribute("cssClass",this.className(node.getAttribute("cssClass")));
			}
			this.doc(node);
		}
	}
	,fixJq: function(jq) {
		var self = this;
		jq.addClass = function(arg) {
			var self1 = self;
			var tmp = window.jQuery.fn.addClass;
			var jq1 = jq;
			var tmp1 = self.className(arg);
			return self1.fixJq(tmp.call(jq1,tmp1));
		};
		jq.removeClass = function(arg) {
			var self1 = self;
			var tmp = window.jQuery.fn.removeClass;
			var jq1 = jq;
			var tmp1 = self.className(arg);
			return self1.fixJq(tmp.call(jq1,tmp1));
		};
		jq.toggleClass = function(arg,b) {
			var self1 = self;
			var tmp = window.jQuery.fn.toggleClass;
			var jq1 = jq;
			var tmp1 = self.className(arg);
			return self1.fixJq(tmp.call(jq1,tmp1,b));
		};
		jq.hasClass = function(arg) {
			var tmp = window.jQuery.fn.hasClass;
			var jq1 = jq;
			var tmp1 = self.className(arg);
			return tmp.call(jq1,tmp1);
		};
		jq.find = function(arg) {
			var self1 = self;
			var tmp = window.jQuery.fn.find;
			var jq1 = jq;
			var tmp1 = self.selector(arg);
			return self1.fixJq(tmp.call(jq1,tmp1));
		};
		jq.filter = function(arg) {
			var self1 = self;
			var tmp = window.jQuery.fn.filter;
			var jq1 = jq;
			var tmp1 = self.selector(arg);
			return self1.fixJq(tmp.call(jq1,tmp1));
		};
		jq.has = function(arg) {
			var tmp = window.jQuery.fn.has;
			var jq1 = jq;
			var tmp1 = self.selector(arg);
			return tmp.call(jq1,tmp1);
		};
		jq.is = function(arg) {
			var tmp = window.jQuery.fn.is;
			var jq1 = jq;
			var tmp1 = self.selector(arg);
			return tmp.call(jq1,tmp1);
		};
		jq.not = function(arg) {
			var self1 = self;
			var tmp = window.jQuery.fn.not;
			var jq1 = jq;
			var tmp1 = self.selector(arg);
			return self1.fixJq(tmp.call(jq1,tmp1));
		};
		jq.parent = function() {
			return self.fixJq(window.jQuery.fn.parent.call(jq));
		};
		return jq;
	}
	,__class__: wquery_CssGlobalizer
};
var wquery_Event = $hx_exports["Event"] = function() {
	this.handlers = [];
};
wquery_Event.__name__ = "wquery.Event";
wquery_Event.prototype = {
	on: function(handler) {
		this.handlers.push(handler);
	}
	,off: function(handler) {
		if(handler != null) {
			HxOverrides.remove(this.handlers,handler);
		} else {
			this.handlers = [];
		}
	}
	,emit: function(args) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var handler = _g1[_g];
			++_g;
			handler(args);
		}
	}
	,__class__: wquery_Event
};
var wquery_EventTools = $hx_exports["EventTools"] = function() { };
wquery_EventTools.__name__ = "wquery.EventTools";
wquery_EventTools.attachHtmlEventHandlers = function(component,node,ignoreTags) {
	var _g = 0;
	var _g1 = node.querySelectorAll("[id]");
	while(_g < _g1.length) {
		var elem = _g1[_g];
		++_g;
		if(ignoreTags.indexOf(elem.tagName.toLowerCase()) < 0) {
			var n = elem.id.lastIndexOf("-");
			var elemID = n >= 0 ? elem.id.substring(n + 1) : elem.id;
			var _g2 = 0;
			var _g3 = wquery_EventTools.elemEventNames;
			while(_g2 < _g3.length) {
				var eventName = _g3[_g2];
				++_g2;
				var methodName = elemID + "_" + eventName;
				var method = [Reflect.field(component,methodName)];
				if(method[0] != null) {
					js.JQuery(elem).on(eventName,(function(method) {
						return function(e) {
							method[0].apply(component,[e]);
						};
					})(method));
				}
			}
		}
	}
};
wquery_EventTools.attachComponentEventHandlers = function(component) {
	if(component.parent == null) {
		return;
	}
	var _g = 0;
	var _g1 = Reflect.fields(component);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(StringTools.startsWith(field,"event_")) {
			var event = Reflect.field(component,field);
			var eventName = field.substring("event_".length);
			var handlerName = component.id + "_" + eventName;
			var method = [Reflect.field(component.parent,handlerName)];
			if(method[0] != null) {
				event.on((function(method) {
					return function(e) {
						method[0].apply(component.parent,[e]);
					};
				})(method));
			}
		}
	}
};
var wquery_Template = $hx_exports["Template"] = function(klass) {
	var superKlass = klass.__super__;
	this.imports = wquery_Template.getImports(klass,superKlass);
	this.doc = wquery_Template.getDoc(klass,superKlass != null ? wquery_Application.getTemplate(superKlass) : null);
	this.preparedDoc = this.doc.cloneNode(true);
	wquery_Template.resolvePlaceHolders(this.preparedDoc);
	this.css = wquery_Template.processStyles(wquery_ComponentTools.getClassName(klass),this.preparedDoc);
};
wquery_Template.__name__ = "wquery.Template";
wquery_Template.getImports = function(klass,superKlass) {
	var r = { };
	if(superKlass != null) {
		var superImports = Reflect.field(superKlass,"imports");
		if(superImports) {
			var _g = 0;
			var _g1 = Reflect.fields(superImports);
			while(_g < _g1.length) {
				var field = _g1[_g];
				++_g;
				r[field] = Reflect.field(superImports,field);
			}
		}
	}
	var imports = Reflect.field(klass,"imports");
	if(imports) {
		var _g = 0;
		var _g1 = Reflect.fields(imports);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			r[field] = Reflect.field(imports,field);
		}
	}
	return r;
};
wquery_Template.getDoc = function(klass,superTemplate) {
	var r = wquery_Template.getRawDoc(klass);
	if(superTemplate != null) {
		r.insertBefore(superTemplate.doc.cloneNode(true),r.firstChild);
	}
	return r;
};
wquery_Template.getRawDoc = function(klass) {
	var html = Reflect.field(klass,"rawHTML");
	if(html == null) {
		html = "";
	}
	var r;
	try {
		r = wquery_ComponentTools.htmlStringToDocumentFragment(html);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		throw new Error(klass.__name__ + ":" + Std.string(e.line) + ": characters " + Std.string(e.column) + "-" + Std.string(e.column + e.length) + " : " + Std.string(e.message));
	}
	wquery_Template.resolveUrlsInHtml(klass,r);
	var css = Reflect.field(klass,"rawCSS");
	if(css != null && css != "") {
		r.insertBefore(wquery_ComponentTools.createStyleElement(null,wquery_Template.resolveUrlsInCss(klass,css)),r.firstChild);
	}
	return r;
};
wquery_Template.resolvePlaceHolders = function(doc) {
	var contents = wquery_Template.getImmediateChildren(doc,"WQ-CONTENT");
	contents.reverse();
	var _g = 0;
	while(_g < contents.length) {
		var content = contents[_g];
		++_g;
		var forId = content.getAttribute("for");
		if(forId != "") {
			var ph = doc.getElementById(forId);
			if(ph != null) {
				var method = content.getAttribute("method");
				if(method == null || method == "") {
					method = "content";
				}
				var newNodes = wquery_Template.extractChildrenNodes(content != null ? content : ph);
				switch(method) {
				case "append":
					ph.append(newNodes);
					break;
				case "content":
					ph.innerHTML = "";
					ph.append(newNodes);
					break;
				case "prepend":
					ph.prepend(newNodes);
					break;
				case "replace":
					ph.replaceWith(newNodes);
					break;
				default:
					$global.console.warn(new Error("<wq-content> attribute `method` must be \"content\" (default), \"replace\", \"append\" or \"prepend\". Found: \"" + method + "\"."));
				}
				if(content != null) {
					content.remove();
				}
			} else {
				$global.console.warn(new Error("Element #" + forId + " is not found (referenced in <wq-content> attribute `for`)."));
			}
		} else {
			$global.console.warn(new Error("<wq-content> must have `for` attribute."));
		}
	}
	var ph;
	while(true) {
		ph = doc.querySelector("wq-placeholder");
		if(!(ph != null)) {
			break;
		}
		ph.replaceWith(wquery_Template.extractChildrenNodes(ph));
	}
};
wquery_Template.processStyles = function(klassName,doc) {
	var cssBlocks = [];
	var cssGlobalizer = new wquery_CssGlobalizer(klassName);
	var _g = 0;
	var _g1 = wquery_Template.getImmediateChildren(doc,"STYLE");
	while(_g < _g1.length) {
		var node = _g1[_g];
		++_g;
		if(!node.hasAttribute("id")) {
			cssBlocks.push(cssGlobalizer.styles(node.innerHTML));
			node.remove();
		}
	}
	cssGlobalizer.doc(doc);
	var result = new Array(cssBlocks.length);
	var _g = 0;
	var _g1 = cssBlocks.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = StringTools.trim(cssBlocks[i]);
	}
	return result.join("\n\n");
};
wquery_Template.extractChildrenNodes = function(base) {
	var r = window.document.createDocumentFragment();
	while(base.firstChild != null) r.appendChild(base.firstChild);
	return r;
};
wquery_Template.getImmediateChildren = function(base,tag) {
	var r = [];
	var _g = 0;
	var _g1 = base.children;
	while(_g < _g1.length) {
		var node = _g1[_g];
		++_g;
		if(node.tagName == tag) {
			r.push(node);
		}
	}
	return r;
};
wquery_Template.resolveUrlsInHtml = function(klass,base) {
	var _g = 0;
	var _g1 = base.children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		if(child.tagName == "IMG") {
			if(child.hasAttribute("src")) {
				var value = child.getAttribute("src");
				if(StringTools.startsWith(value,"~/")) {
					child.setAttribute("src",wquery_Template.getUrlFromClass(klass) + value.substring(1));
				}
			}
		} else if(child.tagName == "STYLE") {
			child.innerHTML = wquery_Template.resolveUrlsInCss(klass,child.innerHTML);
		} else {
			wquery_Template.resolveUrlsInHtml(klass,child);
		}
	}
};
wquery_Template.resolveUrlsInCss = function(klass,css) {
	return new EReg("\\b(url\\s*[(]\\s*)~","ig").map(css,function(re) {
		return re.matched(1) + wquery_Template.getUrlFromClass(klass);
	});
};
wquery_Template.getUrlFromClass = function(klass) {
	var r = klass.__name__;
	var n = r.lastIndexOf(".");
	r = r.substring(0,n);
	r = StringTools.replace(r,".","/");
	return wquery_Template.baseURL + r;
};
wquery_Template.prototype = {
	newDoc: function() {
		return this.preparedDoc.cloneNode(true);
	}
	,__class__: wquery_Template
};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
Object.defineProperty(String.prototype,"__class__",{ value : String, enumerable : false, writable : true});
String.__name__ = "String";
Array.__name__ = "Array";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
wquery_Application.templates = new Map();
wquery_ComponentTools.classNames = new haxe_ds_ObjectMap();
wquery_ComponentTools.classNameCounter = 0;
wquery_EventTools.elemEventNames = ["click","change","load","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","keypress","keydown","keyup","focus","blur","focusin","focusout"];
wquery_Template.baseURL = "";
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
